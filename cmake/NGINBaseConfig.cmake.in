# cmake/NGINBaseConfig.cmake.in
@PACKAGE_INIT@

# Allow downstream to find any dependencies you add in the future
include(CMakeFindDependencyMacro)

# Bring in the exported targets
include("${CMAKE_CURRENT_LIST_DIR}/NGINBaseTargets.cmake")

# Provide canonical aliases for consumers
if(TARGET NGIN::NGIN.Base.Static AND NOT TARGET NGIN::Base::Static)
  add_library(NGIN::Base::Static ALIAS NGIN::NGIN.Base.Static)
endif()

if(TARGET NGIN::NGIN.Base.Shared AND NOT TARGET NGIN::Base::Shared)
  add_library(NGIN::Base::Shared ALIAS NGIN::NGIN.Base.Shared)
endif()

set(_ngin_base_primary_target "")
if(TARGET NGIN::NGIN.Base.Shared)
  set(_ngin_base_primary_target NGIN::NGIN.Base.Shared)
elseif(TARGET NGIN::NGIN.Base.Static)
  set(_ngin_base_primary_target NGIN::NGIN.Base.Static)
endif()

if(_ngin_base_primary_target AND NOT TARGET NGIN::Base)
  add_library(NGIN::Base ALIAS ${_ngin_base_primary_target})
endif()

# Sanity check: ensure the primary alias exists
if(NOT TARGET NGIN::Base)
  message(FATAL_ERROR "NGIN::Base target not found. "
                      "Something went wrong with NGIN.Base installation.")
endif()

# Mark the package as found
set(NGINBase_FOUND TRUE)
set(NGINBase_VERSION "@PACKAGE_VERSION@")
